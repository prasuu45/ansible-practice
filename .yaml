- name: create ec2 and r53 records
  hosts: local
  connection: local
  
  vars:
    
    instances:
    - mysqlllll
    - backend
    - frontend
    zone: hinatadream.online
  tasks:
  - name: ansible to install boto3 and botocore
    ansible.builtin.pip:
      name:
      - boto3
      - botocore
      executable: pip3.9
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: subnet-010df9efe26d8371c
      instance_type: "t3.micro"
      security_group: sg-02c4c043a85fe8c60
      image_id: ami-09c813fb71547fc4f
    loop: "{{ instances }}"
    register: ec2_instances

  - name: print the output
    ansible.builtin.debug:
      msg: "{{ ec2_instances }}"

  #private IP R53
  - name: create r53 private records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" #mysql.daws81s.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"

  - name: create r53 public record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}" #daws81s.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend"




    - name: create ec2 instances
  hosts: local
  connection: local
  vars:
    instances:
    - backend
    - mysql
    - fronted
    zone: hinatadream.online

  tasks:
  - name: install python boto3 botocore
    ansible.builtin.pip:
     name:
     - boto3
     - botocore
     executable: pip3.9


  - name: create ec2 instances
    amazon.aws.ec2_instance:
     name: "{{ item }}"
     vpc_subnet_id: subnet-010df9efe26d8371c
     instance_type: t3.micro
     security_group: sg-02c4c043a85fe8c60
     image_id: ami-09c813fb71547fc4f
    loop: "{{ instances }}"
    register: ec2_instanes

  - name: print the output
    ansible.builtin.debug:
     msg: "{{ ec2_instanes }}" 


    #private ip
 
  - name: create r53
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" 
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
